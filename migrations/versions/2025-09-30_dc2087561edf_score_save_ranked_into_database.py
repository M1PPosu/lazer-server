"""score: save ranked into database

Revision ID: dc2087561edf
Revises: 9419272e4c85
Create Date: 2025-09-30 10:44:25.286498

"""

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "dc2087561edf"
down_revision: str | Sequence[str] | None = "9419272e4c85"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("scores", sa.Column("ranked", sa.Boolean(), nullable=True))
    op.execute("UPDATE scores SET ranked = pp > 0")
    op.alter_column("scores", "ranked", nullable=False, type_=sa.Boolean(), existing_type=sa.Boolean())

    op.drop_constraint(op.f("best_scores_ibfk_2"), "best_scores", type_="foreignkey")
    op.create_foreign_key(op.f("best_scores_ibfk_2"), "best_scores", "scores", ["score_id"], ["id"], ondelete="CASCADE")
    op.drop_constraint(op.f("playlist_best_scores_ibfk_3"), "playlist_best_scores", type_="foreignkey")
    op.create_foreign_key(
        op.f("playlist_best_scores_ibfk_3"), "playlist_best_scores", "scores", ["score_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(op.f("total_score_best_scores_ibfk_2"), "total_score_best_scores", type_="foreignkey")
    op.create_foreign_key(
        op.f("total_score_best_scores_ibfk_2"),
        "total_score_best_scores",
        "scores",
        ["score_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("scores", "ranked")

    op.drop_constraint(op.f("best_scores_ibfk_2"), "best_scores", type_="foreignkey")
    op.create_foreign_key(op.f("best_scores_ibfk_2"), "best_scores", "scores", ["score_id"], ["id"])
    op.drop_constraint(op.f("playlist_best_scores_ibfk_3"), "playlist_best_scores", type_="foreignkey")
    op.create_foreign_key(op.f("playlist_best_scores_ibfk_3"), "playlist_best_scores", "scores", ["score_id"], ["id"])
    op.drop_constraint(op.f("total_score_best_scores_ibfk_2"), "total_score_best_scores", type_="foreignkey")
    op.create_foreign_key(
        op.f("total_score_best_scores_ibfk_2"), "total_score_best_scores", "scores", ["score_id"], ["id"]
    )
    # ### end Alembic commands ###
