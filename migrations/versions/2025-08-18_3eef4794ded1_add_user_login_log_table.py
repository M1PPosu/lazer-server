"""Add user login log table

Revision ID: 3eef4794ded1
Revises: df9f725a077c
Create Date: 2025-08-18 00:00:11.369944

"""

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "3eef4794ded1"
down_revision: str | Sequence[str] | None = "df9f725a077c"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "userloginlog",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("ip_address", sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
        sa.Column("user_agent", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.Column("login_time", sa.DateTime(), nullable=False),
        sa.Column("country_code", sqlmodel.sql.sqltypes.AutoString(length=2), nullable=True),
        sa.Column("country_name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
        sa.Column("city_name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
        sa.Column("latitude", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
        sa.Column("longitude", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
        sa.Column("time_zone", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
        sa.Column("asn", sa.Integer(), nullable=True),
        sa.Column("organization", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
        sa.Column("login_success", sa.Boolean(), nullable=False),
        sa.Column("login_method", sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
        sa.Column("notes", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_userloginlog_ip_address"), "userloginlog", ["ip_address"], unique=False)
    op.create_index(op.f("ix_userloginlog_user_id"), "userloginlog", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_userloginlog_user_id"), table_name="userloginlog")
    op.drop_index(op.f("ix_userloginlog_ip_address"), table_name="userloginlog")
    op.drop_table("userloginlog")
    # ### end Alembic commands ###
